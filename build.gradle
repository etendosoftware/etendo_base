plugins {
    id 'maven-publish'
    id 'java'
}

ant.importBuild('build.xml') { String oldTargetName ->
    switch (oldTargetName) {
        case 'clean':
            return 'antClean'
        case 'setup':
            return 'antSetup'
        case 'init':
            return 'antInit'
        case 'install.source':
            return 'antInstall'
        default:
            return oldTargetName
    }
}

repositories {
    jcenter()
    maven {
          url "http://repo.futit.cloud:8081/repository/maven-releases"
    }
    maven {
          url "http://localhost:8081/repository/obclassic"
    }
}

configurations {
    coreDep
    moduleDeps
}

dependencies {
    coreDep 'com.smf.classic.core:ob:19.3.4.36257@zip'	
    moduleDeps 'com.smf:securewebservices:1.0.1@zip'	
}

/** Expand the core from the dependency */
task expandCore(type: Copy) {
    def extractDir = "${project.projectDir}"

    dependsOn configurations.coreDep
    from { 
        configurations.coreDep.collect { 
            zipTree(it)
        }
    }
    into extractDir
}

/** Expand modules from the dependencies */
task expandModules(type: Copy) {
    def extractDir = "${project.projectDir}/modules"
    dependsOn configurations.moduleDeps
    from { 
        configurations.moduleDeps.collect { 
            zipTree(it)
        }
    }
    into extractDir
}
/** Expand core and modules from the dependencies */
task expand{
    dependsOn expandCore
    dependsOn expandModules
    tasks.findByName('expandModules').mustRunAfter 'expandCore'
}

/** Call ant setup to prepare enviroment */
task setup {
    ant.properties['nonInteractive'] = true;
    ant.properties['acceptLicense'] = true;   
    finalizedBy antSetup
}

/** The install.source ant task now depends on ant setup */
task install{
    dependsOn setup
    finalizedBy antInstall
}